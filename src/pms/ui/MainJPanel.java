/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pms.ui;

import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import pms.model.Patient;
import pms.model.ManagementSystem;
import pms.model.Person;
import pms.utils.Utils;

/**
 *
 * @author akshatajadhav
 */
public class MainJPanel extends javax.swing.JPanel {

    ManagementSystem system;
    JLayeredPane layeredPane;
    /**
     * Creates new form PatientJPanel
     */
    public MainJPanel(JLayeredPane layeredPane, ManagementSystem system) {
        initComponents();
        this.layeredPane=layeredPane;
        this.system = system;
    }
    public void displayPanel(JPanel panel) {
        layeredPane.removeAll();
        layeredPane.add(panel);
        layeredPane.repaint();
        layeredPane.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        registerNow = new javax.swing.JLabel();
        continueBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        patientID = new javax.swing.JTextField();
        dashBoardBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(700, 590));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel1.setText("Patient/Person ID : ");

        registerNow.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        registerNow.setForeground(new java.awt.Color(0, 0, 238));
        registerNow.setText("Register Now");
        registerNow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerNow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerNowMouseClicked(evt);
            }
        });

        continueBtn.setBackground(new java.awt.Color(92, 184, 92));
        continueBtn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        continueBtn.setForeground(new java.awt.Color(255, 255, 255));
        continueBtn.setText("Continue");
        continueBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        continueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Not a Patient?");

        dashBoardBtn.setBackground(new java.awt.Color(255, 255, 255));
        dashBoardBtn.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        dashBoardBtn.setText("DASHBOARD");
        dashBoardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashBoardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashBoardBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(197, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dashBoardBtn)
                        .addGap(22, 22, 22))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registerNow)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(continueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(295, 295, 295))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(dashBoardBtn)
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(continueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerNow, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(240, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void continueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueBtnActionPerformed
        int pID = -1;
        try{
            pID=Integer.parseInt(patientID.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide a number!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        Patient patient = new Patient();
        if(pID>50000000 && pID<59999999){
            if(system.getPatientDirectory().getPatientIDs()!=null && !system.getPatientDirectory().getPatientIDs().contains(pID)){
                JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            patient = system.getPatientDirectory().getPatient(pID);
        }
        else if(pID>10000000 && pID<19999999){
            if(system.getPatientDirectory().getPersonIDs().contains(pID)){
                int patientId = system.getPatientDirectory().getPatientId(pID);
                patient = system.getPatientDirectory().getPatient(patientId);
            }
            else if(!system.getPersonDirectory().getPersonIds().contains(pID)){
                JOptionPane.showMessageDialog(this, "Person ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }else{
                Person person = system.getPersonDirectory().getPerson(pID);
                patient = Utils.personToPatient(person);
                int id = system.addPatient(patient);
                JOptionPane.showMessageDialog(this, "Patient successfully created!!\nPatient ID: "+id, "Info", JOptionPane.INFORMATION_MESSAGE);
                Utils.copyToClipboard(id);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Wrong Person/Patient ID!!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        EncounterJPanel ejp = new EncounterJPanel(layeredPane, patient, system);
        displayPanel(ejp);
    }//GEN-LAST:event_continueBtnActionPerformed

    private void registerNowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerNowMouseClicked
        PersonPersonalDetailsJPanel ppdjp = new PersonPersonalDetailsJPanel(layeredPane, system);
        displayPanel(ppdjp);
    }//GEN-LAST:event_registerNowMouseClicked

    private void dashBoardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashBoardBtnActionPerformed
        DashboardJPanel djp = new DashboardJPanel(layeredPane, system);
        displayPanel(djp);
    }//GEN-LAST:event_dashBoardBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton continueBtn;
    private javax.swing.JButton dashBoardBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField patientID;
    private javax.swing.JLabel registerNow;
    // End of variables declaration//GEN-END:variables
    
}
